{"version":3,"sources":["Components/Card.js","Components/CartItem.js","Components/Cart.js","Components/EventTemplate.js","Components/MyEvents.js","Components/SignInPrompt.js","App.js","serviceWorker.js","index.js"],"names":["displayTime","time","console","log","times","split","hours","minutes","suffix","Product","singleEvent","addToCart","id","style","height","Image","textAlign","width","src","alt","Content","Item","as","size","name","align","cost","day_of_week","date","toString","replace","time_start","time_end","overflowY","location","Trigger","Menu","onClick","description","CartItem","product","going","amount","removeFromCart","subtitle","sku","rounded","ShoppingCart","i","cartInfoContent","contents","length","content","push","Group","multiline","map","key","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","database","DatePickers","selectedDate","setSelectedDate","utils","DateFnsUtils","Grid","container","disableToolbar","variant","format","margin","label","value","onChange","KeyboardButtonProps","TimePickers","selectedTimeFrom","selectedTimeTo","setSelectedTimeFrom","setSelectedTimeTo","EventTemplate","hostID","React","useState","EventName","setEventName","FoodType","setFoodType","DietaryRestrictions","setDietaryRestrictions","Organization","setOrganization","Location","Member_Only","setMemberOnly","Event_Type","setEventType","Description","setDescription","setFileUpload","Date","weekday","Array","type","placeholder","e","target","Container","Option","Label","Input","files","CTA","Icon","icon","faUpload","kind","ref","getMonth","getDate","getYear","Math","floor","random","String","getDay","color","MyEvents","useStyles","makeStyles","theme","root","padding","display","alignItems","input","marginLeft","spacing","flex","iconButton","divider","SignInPrompt","onButtonClick","classes","userName","text","Paper","className","InputBase","event","Divider","orientation","IconButton","aria-label","App","data","cartActive","setCart","eventsActive","setMyEvents","cartInfo","setCartInfo","eventList","setEvents","filteredList","setFilter","activeDay","setDay","activeCost","setCost","activeTime","setTime","setUserName","datetonum","Number","useEffect","on","snapshot","val","timesorter","keys","Object","sort","a","b","currentDate","day","dateString","getFullYear","today","sorteddata","filter","inCart","productId","renderUpdate","set","useRenderUpdate","events","values","filteredEvents","id2product","addCartItem","index","timeToMins","hrnmins","meal","filterItems","paddingTop","fixed","paddingLeft","paddingRight","Brand","fontSize","faUtensils","faCalendarPlus","state","active","Background","Cart","Close","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e1f38d29.chunk.js","sourcesContent":["import React from 'react';\nimport 'rbx/index.css';\nimport { Card, Dropdown, Button, Content, Media, Title, Level } from 'rbx';\n\n\nconst displayTime = (time) => {\n    console.log(time)\n    const times = time.split(\":\");\n    let hours = times[0] > 12 ? times[0] - 12 : times[0];\n    hours = (hours == '00') ? 12 : hours\n    const minutes = times[1];\n    const suffix = times[0] >= 12 ? 'PM' : 'AM';\n    console.log(hours)\n    return hours + \":\" + minutes + \" \" + suffix;\n}\n\n\n\nconst Product = ({ singleEvent, addToCart }) => {\n    return (\n        <Card id=\"eventcard\" style = {{height: '720px'}}>\n            <Card.Image>\n                <div style={{ textAlign: 'center', width: '100%' }}>\n                    <img src={`./data/events/${singleEvent.id}.jpg`} alt='' id=\"eventpic\" />\n                </div>\n            </Card.Image>\n            <Card.Content>\n                <Media>\n                    <Media.Item>\n                        <Title as=\"p\" size={6}>\n                            {singleEvent.name}\n                        </Title>\n                        <Level>\n                          <Level.Item align=\"left\">\n                            <b>Cost: </b> {singleEvent.cost}\n                          </Level.Item>\n                      </Level>\n                      <Level>\n                        <Level.Item align=\"left\">\n                          <b>Date: </b>  {singleEvent.day_of_week},  {(singleEvent.date).toString().replace(/_/g,\"/\")}\n                        </Level.Item>\n                      </Level>\n                      <Level>\n                        <Level.Item align=\"left\">\n                          <b>Time: </b> {displayTime(singleEvent.time_start)} - {displayTime(singleEvent.time_end)}\n                        </Level.Item>\n                      </Level>\n                      <Content align=\"left\" style = {{overflowY : 'auto', height:'72px', width: '100%'}}>\n                          <b>Location:</b> {singleEvent.location}\n                      </Content>\n                    </Media.Item>\n\n                    <Media.Item as=\"figure\" align=\"left\">\n                        <Dropdown>\n                            <Dropdown.Trigger>\n                                <Button>\n                                    <span>Going?</span>\n                                </Button>\n                            </Dropdown.Trigger>\n                            <Dropdown.Menu>\n                                <Dropdown.Content>\n                                <Dropdown.Item onClick={ () => addToCart(singleEvent.id, 'Going') }> Going </Dropdown.Item>\n                                <Dropdown.Item> Not Going </Dropdown.Item>\n                                </Dropdown.Content>\n                            </Dropdown.Menu>\n                        </Dropdown>\n                    </Media.Item>\n                </Media>\n                <Content style = {{overflowY : 'auto', height:'70px'}}>\n                    {singleEvent.description}\n                </Content>\n            </Card.Content>\n        </Card>\n    )\n}\n\nexport default Product;\n","import React from 'react';\nimport 'rbx/index.css';\nimport { Card, Button, Content, Media, Title } from 'rbx';\n\nconst CartItem = ({ product, going, amount, removeFromCart }) => {\n  return (\n    <Card>\n      <Card.Image>\n        <div style={{ textAlign: 'center', width: '100%' }}>\n          <img src={`./data/events/${product.id}.jpg`} alt='' />\n        </div>\n      </Card.Image>\n      <Card.Content>\n        <Media>\n          <Media.Item as=\"figure\" align=\"left\">\n            <Button>\n              <span>{going}</span>\n            </Button>\n          </Media.Item>\n          <Media.Item>\n            <Title as=\"p\" size={6}>\n              {product.name}\n            </Title>\n            <Title as=\"p\" subtitle size={6}>\n              {product.date}\n            </Title>\n          </Media.Item>\n        </Media>\n        <Content>\n          {(amount===1) ? amount+\" person is going\" : amount+\" people are going\"}\n        </Content>\n        <Content>\n          {product.location}\n        </Content>\n        <Button onClick={() => { removeFromCart(product.sku, going); }\n        } rounded>\n          Remove\n          </Button>\n      </Card.Content>\n    </Card>\n  )\n}\n\nexport default CartItem;\n","import React from 'react';\nimport 'rbx/index.css';\nimport { Title, Column, Container } from 'rbx';\nimport CartItem from './CartItem';\n\nconst ShoppingCart = ({ cartInfoContent, removeFromCart }) => {\n    const contents = [];\n    let i;\n    for (i = 0; i < cartInfoContent.length; i += 1) {\n        const content = cartInfoContent[i];\n        const product = content.product;\n        if (content['Going'] !== 0) {\n            contents.push([product, 'Going', content['Going']]);\n        }\n    }\n\n    return (\n        <Container>\n            <Title>My Events</Title>\n            <Column.Group multiline>\n                <Column size='full'>\n                </Column>\n                {contents.map(content =>\n                    <Column size='full' key={content[0].id}>\n                        <CartItem product={content[0]} going={content[1]} amount={content[2]} removeFromCart={removeFromCart} />\n                    </Column>\n                )}\n            </Column.Group>\n        </Container>\n    );\n};\n\nexport default ShoppingCart;\n","import React from 'react';\nimport 'rbx/index.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUpload } from '@fortawesome/free-solid-svg-icons';\nimport { Card, Button, Content, Field, Label, Control, Input, Radio, Textarea, File, Select } from 'rbx';\nimport Grid from '@material-ui/core/Grid';\nimport DateFnsUtils from '@date-io/date-fns';\nimport 'firebase/database';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport firebase from 'firebase/app';\nimport 'firebase/database';\n//import db from '../App';\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyBWH38HPQ857TYu82B8wzufC8sK4yMOTco\",\n  authDomain: \"hungrycats-ad46c.firebaseapp.com\",\n  databaseURL: \"https://hungrycats-ad46c.firebaseio.com\",\n  projectId: \"hungrycats-ad46c\",\n  storageBucket: \"hungrycats-ad46c.appspot.com\",\n  messagingSenderId: \"684059161523\",\n  appId: \"1:684059161523:web:225ae9c7b51eaf653b51c6\"\n};\nfirebase.initializeApp(firebaseConfig);\n\nexport const db = firebase.database();\n\nexport function DatePickers({selectedDate, setSelectedDate}) {\n  // The first commit of Material-UI\n\n  const handleDateChange = date => {\n    setSelectedDate(date);\n  };\n\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      <Grid container>\n        <KeyboardDatePicker\n          disableToolbar\n          variant=\"inline\"\n          format=\"MM/dd/yyyy\"\n          margin=\"normal\"\n          id=\"date-picker-inline\"\n          label=\"Pick Date\"\n          value={selectedDate}\n          onChange={handleDateChange}\n          KeyboardButtonProps={{\n            'aria-label': 'change date',\n          }}\n        />\n      </Grid>\n    </MuiPickersUtilsProvider>\n  );\n}\n\nexport function TimePickers({selectedTimeFrom,selectedTimeTo,setSelectedTimeFrom,setSelectedTimeTo}) {\n  // The first commit of Material-UI\n\n  const handleTimeChangeFrom = date => {\n    setSelectedTimeFrom(date);\n  };\n  const handleTimeChangeTo = date => {\n    setSelectedTimeTo(date);\n  };\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      <Grid container>\n        <KeyboardTimePicker\n          margin=\"normal\"\n          id=\"time-picker-from\"\n          label=\"From\"\n          value={selectedTimeFrom}\n          onChange={handleTimeChangeFrom}\n          KeyboardButtonProps={{\n            'aria-label': 'change time',\n          }}\n        />\n        <KeyboardTimePicker\n          margin=\"normal\"\n          id=\"time-picker-to\"\n          label=\"To\"\n          value={selectedTimeTo}\n          onChange={handleTimeChangeTo}\n          KeyboardButtonProps={{\n            'aria-label': 'change time',\n          }}\n        />\n      </Grid>\n    </MuiPickersUtilsProvider>\n  );\n}\n\n\nexport const EventTemplate = ({ hostID }) => {\n  const [EventName, setEventName] = React.useState('');\n  const [FoodType, setFoodType] = React.useState('');\n  const [DietaryRestrictions, setDietaryRestrictions] = React.useState('');\n  const [Organization, setOrganization] = React.useState('');\n  const [Location, setLocation] = React.useState('');\n\n  const [Member_Only, setMemberOnly] = React.useState('');\n  const [Event_Type, setEventType] = React.useState('');\n\n  const [Description, setDescription] = React.useState('');\n\n  const [FileUpload, setFileUpload] = React.useState('');\n\n  const [selectedTimeFrom, setSelectedTimeFrom] = React.useState(new Date());\n  const [selectedTimeTo, setSelectedTimeTo] = React.useState(new Date());\n  const [selectedDate, setSelectedDate] = React.useState(new Date());\n  var d = new Date();\n  var weekday = new Array(7);\n  weekday[0] = \"Sunday\";\n  weekday[1] = \"Monday\";\n  weekday[2] = \"Tuesday\";\n  weekday[3] = \"Wednesday\";\n  weekday[4] = \"Thursday\";\n  weekday[5] = \"Friday\";\n  weekday[6] = \"Saturday\";\n\n  const submitEvent = () => {\n    const ref = db.ref('/')\n    console.log(\"printed\")\n    console.log(selectedDate)\n    console.log(Description)\n    console.log(Member_Only)\n\n    //parse selectedDate\n    const date = (selectedDate.getMonth()+1)+\"/\"+selectedDate.getDate()+\"/\"+(selectedDate.getYear()+1900)\n    ///\n\n    //get random id\n    const id = Math.floor(Math.random() * 100000)\n    console.log(id)\n\n    ref.push({\n      \"id\": String(id),\n      \"cost\": \"Free\",\n      \"date\": date,\n      \"day_of_week\": weekday[selectedDate.getDay()],\n      \"description\": Description,\n      \"dietary_restrictions\": DietaryRestrictions,\n      \"event_type\": Event_Type,\n      \"food_type\": FoodType,\n      \"location\": Location,\n      \"membership\": Member_Only,\n      \"name\": EventName,\n      \"organization\": Organization,\n      \"time_end\": \"13:00\",//selectedTimeTo,\n      \"time_start\": \"12:00\"//selectedTimeFrom\n    })\n  }\n    return (\n        <Card>\n            <Card.Content>\n                <Field>\n                    <Label>Event Name</Label>\n                    <Control>\n                        <Input type=\"text\" placeholder=\"Name of Event\" value={EventName}\n        onChange={e => setEventName(e.target.value)} />\n                    </Control>\n                </Field>\n                <DatePickers selectedDate={selectedDate} setSelectedDate={setSelectedDate}/>\n                <TimePickers selectedTimeFrom={selectedTimeFrom} selectedTimeTo={selectedTimeTo} setSelectedTimeFrom={setSelectedTimeFrom} setSelectedTimeTo={setSelectedTimeTo} />\n                <Field>\n                    <Label>Food Type</Label>\n                    <Control>\n                        <Input type=\"text\" placeholder=\"Food Type\" value={FoodType}\n        onChange={e => setFoodType(e.target.value)} />\n                    </Control>\n                </Field>\n                <Field>\n                    <Label>Dietary Restrictions</Label>\n                    <Control>\n                        <Input type=\"text\" placeholder=\"Dietary Restrictions\" value={DietaryRestrictions}\n        onChange={e => setDietaryRestrictions(e.target.value)} />\n                    </Control>\n                </Field>\n                <Field>\n                    <Label>Organization</Label>\n                    <Control>\n                        <Input type=\"text\" placeholder=\"Organization Name\" value={Organization}\n        onChange={e => setOrganization(e.target.value)} />\n                    </Control>\n                </Field>\n                <Field>\n                  <Label>Event Type</Label>\n                  <Select.Container>\n                    <Select>\n                      <Select.Option value = {Event_Type} onChange={e => setEventType(\"Social\")}>Social</Select.Option>\n                      <Select.Option value = {Event_Type} onChange={e => setEventType(\"Professional\")}>Professional</Select.Option>\n                    </Select>\n                  </Select.Container>\n                </Field>\n                <Field>\n                    <Label>Member Only?</Label>\n                    <Control>\n                        <Label>\n                            <Radio name=\"exclusive\" value = {Member_Only}\n                            onChange={e => setMemberOnly(1)} /> Yes\n                        </Label>\n                        <Label>\n                            <Radio name=\"exclusive\" value = {Member_Only}\n                            onChange={e => setMemberOnly(0)}  /> No\n                        </Label>\n                    </Control>\n                </Field>\n                <Field>\n                    <Label>Description</Label>\n                    <Control>\n                        <Textarea placeholder=\"Description\" value={Description}\n        onChange={e => setDescription(e.target.value)}/>\n                    </Control>\n                </Field>\n                <File >\n                    <File.Label>\n                        <File.Input name=\"resume\" onChange={e => setFileUpload(e.target.files[0]) }/>\n                        <File.CTA>\n                            <File.Icon>\n                                <FontAwesomeIcon icon={faUpload} />\n                            </File.Icon>\n                            <File.Label as=\"span\">Choose a File</File.Label>\n                        </File.CTA>\n                    </File.Label>\n                </File>\n                <Field kind=\"group\" align=\"right\">\n                    <Control>\n                        <Button onClick={submitEvent} color=\"primary\">Confirm Event</Button>\n                    </Control>\n                </Field>\n            </Card.Content>\n        </Card>\n    )\n}\n","import React from 'react';\nimport 'rbx/index.css';\nimport { Title, Column, Container } from 'rbx';\nimport {EventTemplate} from './EventTemplate';\n\n\nconst MyEvents = ({ }) => {\nreturn (\n    <EventTemplate></EventTemplate>\n);\n};\n\nexport default MyEvents;","import React, {useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n      padding: '2px 4px',\n      display: 'flex',\n      alignItems: 'center',\n      width: 400,\n    },\n    input: {\n      marginLeft: theme.spacing(1),\n      flex: 1,\n    },\n    iconButton: {\n      padding: 10,\n    },\n    divider: {\n      height: 28,\n      margin: 4,\n    },\n  }));\n  \n  export default function SignInPrompt({onButtonClick, userName}) {\n    const classes = useStyles();\n    let text = \"\"\n    const getInputValue = name => event =>\n    {\n      text = event.target.value;\n    }\n    const sendUserNameData = () =>\n    {\n      onButtonClick(text);\n    }\n    return (\n      <Paper className={classes.root}>\n        <InputBase\n          id=\"user-name-input\"\n          className={classes.input}\n          placeholder=\"Enter username\"\n          onChange={getInputValue('name')}\n        />\n        <Divider className={classes.divider} orientation=\"vertical\" />\n        <IconButton onClick = {sendUserNameData} color=\"primary\" className={classes.iconButton} aria-label=\"directions\">\n          <CheckCircleIcon />\n        </IconButton>\n      </Paper>\n    );\n\n};","import React, { useEffect, useState } from 'react';\nimport 'rbx/index.css';\nimport { Column, Container, Navbar, Button, Icon, Modal, Box, Dropdown, Tag } from 'rbx';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUtensils, faCalendarPlus } from '@fortawesome/free-solid-svg-icons';\nimport Product from './Components/Card';\nimport Cart from './Components/Cart';\nimport firebase from 'firebase/app';\nimport MyEvents from './Components/MyEvents';\nimport SignInPrompt from './Components/SignInPrompt';\nimport 'firebase/database';\nimport {db} from './Components/EventTemplate';\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyBWH38HPQ857TYu82B8wzufC8sK4yMOTco\",\n  authDomain: \"hungrycats-ad46c.firebaseapp.com\",\n  databaseURL: \"https://hungrycats-ad46c.firebaseio.com\",\n  projectId: \"hungrycats-ad46c\",\n  storageBucket: \"hungrycats-ad46c.appspot.com\",\n  messagingSenderId: \"684059161523\",\n  appId: \"1:684059161523:web:225ae9c7b51eaf653b51c6\"\n};\n//firebase.initializeApp(firebaseConfig);\n\n\nconst App = () => {\n  const [data, setData] = useState({});\n  const [cartActive, setCart] = useState(false);\n  const [eventsActive, setMyEvents] = useState(false);\n  const [cartInfo, setCartInfo] = useState([]);\n  const [inventory, setInventory] = useState({});\n  const [eventList, setEvents] = useState({});\n  const [filteredList, setFilter] = useState({});\n  const [activeDay, setDay] = useState('All Days');\n  const [activeCost, setCost] = useState('All Costs');\n  const [activeTime, setTime] = useState('All Times');\n  const [userName, setUserName] = useState(\"\");\n  const db = firebase.database();\n  const datetonum = (date, time) => {\n    return Number(date[0])*10000 + Number(date[1])*100 + (Number(date[2])-2018)*1000000 + Number(time[0])*4 + Number(time[1])/10\n  }\n\n  useEffect(() => {\n    const ref = db.ref('/')\n    console.log(ref)\n    ref.on('value', (snapshot) =>\n    {\n      if (snapshot.val()) {\n        const data = snapshot.val()\n        console.log('data')\n        console.log(data)\n        const date = \"\"\n        const time = \"\"\n        const timesorter = []\n        const keys = Object.keys(data)\n        for (i in keys){\n          console.log(keys[i])\n          console.log(data[keys[i]])\n        }\n        for (i in keys){\n          const date = data[keys[i]].date.split('/');\n          const time = data[keys[i]].time_start.split(':');\n          timesorter.push([data[keys[i]], datetonum(date, time)]);\n        }\n        timesorter.sort((a,b) => a[1] - b[1])\n        console.log('timesorter')\n        console.log(timesorter)\n        const currentDate = new Date();\n\n        const day = currentDate.getDate();\n        const month = currentDate.getMonth();\n        const year = currentDate.getFullYear();\n\n        const dateString = (month + 1) + \"/\" + day + \"/\" + year;\n        console.log(dateString)\n        const today = datetonum(dateString.split('/'),[\"0\",\"0\"])\n        const nopastevents = timesorter.filter(a => a[1] > today)\n        const sorteddata = nopastevents.map(event => event[0])\n        console.log(today)\n        console.log(sorteddata)\n        setEvents(sorteddata);\n        setFilter(sorteddata);\n      }\n      else\n        console.log(\"no data.\")\n\n    });\n    // const fetchInventory = async () => {\n    //   const response = await fetch('./data/items.json');\n    //   const json = await response.json();\n    //   setInventory(json);\n    // };\n    //\n    // fetchInventory();\n  }, []);\n\n  const inCart = (productId) => {\n    for (i = 0; i < cartInfo.length; i += 1) {\n      if (cartInfo[i].productId === productId) {\n        return i;\n      }\n    }\n    return -1;\n  }\n\n  const useRenderUpdate = () => {\n    const [value, set] = useState(true);\n    return () => set(value => !value);\n  }\n  const renderUpdate = useRenderUpdate();\n\n  const products = Object.values(data);\n\n  const events = Object.values(eventList)\n\n  const filteredEvents = Object.values(filteredList)\n\n  const id2product = {}\n  let i;\n  for (i = 0; i < events.length; i += 1) {\n    id2product[events[i].id] = events[i];\n  }\n\n  // useEffect(() => {\n  //   const fetchProducts = async () => {\n  //     const response = await fetch('./data/products.json');\n  //     const json = await response.json();\n  //     setData(json);\n  //   };\n  //   fetchProducts();\n  // }, []);\n\n  const addCartItem = (productId, size) => {\n    const index = inCart(productId);\n    if (index !== -1) {\n      cartInfo[index][size] += 1;\n    }\n    else {\n      cartInfo.push({\n        productId: productId,\n        product: id2product[productId],\n        'Going': 0,\n        'Not Going': 0\n      });\n      cartInfo[cartInfo.length - 1][size] += 1;\n    }\n    setCartInfo(cartInfo);\n    setCart(true);\n    renderUpdate();\n    {console.log(cartInfo)}\n  };\n\n  const removeCartItem = (productId, size) => {\n    const index = inCart(productId);\n    if (index !== -1) {\n      cartInfo[index][size] = cartInfo[index][size] > 0 ? cartInfo[index][size] - 1 : 0;\n    }\n    else {\n      cartInfo.push({\n        productId: productId,\n        product: id2product[productId],\n        'Going': 0,\n        'Not Going': 0\n      });\n      cartInfo[index][size] = cartInfo[index][size] > 0 ? cartInfo[index][size] - 1 : 0;\n    }\n    setCartInfo(cartInfo);\n    renderUpdate();\n  };\n\n  const timeToMins = (time) => {\n    const hrnmins = time.split(\":\")\n    return Number(hrnmins[0])*60+Number(hrnmins[1])\n  }\n\n  const meal = (time) => {\n    if (timeToMins(time) <= timeToMins(\"10:00\"))\n      return 'Breakfast'\n    else if (timeToMins(time) >= timeToMins(\"16:00\"))\n      return 'Dinner'\n    else {\n      return 'Lunch'\n    }\n  }\n\n  const filterItems = (day, cost, time) => {\n    if(day === 'All Days' && cost === 'All Costs' && time == 'All Times')\n      setFilter(events)\n    else if (cost === 'All Costs' && time === 'All Times') {\n      setFilter(events.filter(event => {\n        return event.day_of_week === day\n        }))\n    }\n    else if (day === 'All Days' && time == 'All Times') {\n      setFilter(events.filter(event => {\n        if (cost === 'Free')\n          return event.cost === 'Free'\n        else\n          return event.cost !== 'Free'\n      }))\n    }\n    else if (day === 'All Days' && cost === 'All Costs') {\n      setFilter(events.filter(event => {\n        return meal(event.time_start) === time\n      }))\n    }\n    else if (time == 'All Times'){\n      setFilter(events.filter(event => {\n        if (cost === 'Free')\n          return event.day_of_week === day && event.cost === 'Free'\n        else\n          return event.day_of_week === day && event.cost !== 'Free'\n      }))\n    }\n    else if (day == 'All Days'){\n      setFilter(events.filter(event => {\n        if (cost === 'Free')\n          return meal(event.time_start) === time && event.cost === 'Free'\n        else\n          return meal(event.time_start) === time && event.cost !== 'Free'\n      }))\n    }\n    else if (cost == 'All Costs'){\n      setFilter(events.filter(event => {\n        return meal(event.time_start) === time && event.day_of_week === day\n      }))\n    }\n    else {\n      setFilter(events.filter(event => {\n        if (cost === 'Free')\n          return meal(event.time_start) === time && event.cost === 'Free' && event.day_of_week === day\n        else\n          return meal(event.time_start) === time && event.cost !== 'Free' && event.day_of_week === day\n      }))\n    }\n    }\n\n\n  const DayFilter = ({ state }) => {\n    const days = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday', 'All Days']\n    return (\n      <Dropdown>\n        <Dropdown.Trigger>\n          <Button>\n            <span>{activeDay}</span>\n          </Button>\n        </Dropdown.Trigger>\n        <Dropdown.Menu>\n          <Dropdown.Content>\n            {days.map(day =>\n              <Dropdown.Item\n                onClick={() => {\n                  setDay(day)\n                  filterItems(day, activeCost, activeTime)\n                }}\n              >\n                {day}\n              </Dropdown.Item>\n            )}\n          </Dropdown.Content>\n        </Dropdown.Menu>\n      </Dropdown>\n    )\n  }\n\n  const CostFilter = ({ state }) => {\n    const costs = ['Free', 'Not Free', 'All Costs']\n    return (\n      <Dropdown>\n        <Dropdown.Trigger>\n          <Button>\n            <span>{activeCost}</span>\n          </Button>\n        </Dropdown.Trigger>\n        <Dropdown.Menu>\n          <Dropdown.Content>\n            {costs.map(cost =>\n              <Dropdown.Item\n                onClick={() => {\n                  setCost(cost)\n                  filterItems(activeDay, cost, activeTime)\n                }}\n              >\n                {cost}\n              </Dropdown.Item>\n            )}\n          </Dropdown.Content>\n        </Dropdown.Menu>\n      </Dropdown>\n    )\n  }\n\n  const TimeFilter = ({ state }) => {\n    const times = ['Breakfast', 'Lunch', 'Dinner', 'All Times']\n    return (\n      <Dropdown>\n        <Dropdown.Trigger>\n          <Button>\n            <span>{activeTime}</span>\n          </Button>\n        </Dropdown.Trigger>\n        <Dropdown.Menu>\n          <Dropdown.Content>\n            {times.map(time =>\n              <Dropdown.Item\n                onClick={() => {\n                  setTime(time)\n                  filterItems(activeDay, activeCost, time)\n                }}\n              >\n                {time}\n              </Dropdown.Item>\n            )}\n          </Dropdown.Content>\n        </Dropdown.Menu>\n      </Dropdown>\n    )\n  }\n\n  return (\n    <Container as='div' style={{ width: '100%', paddingTop: '20px' }}>\n      <Navbar fixed='top' as='div' style={{ paddingLeft: '60px', paddingRight: '50px', paddingTop: '10px', width: '80%', }}>\n        <Navbar.Brand>\n          <Navbar.Item>\n            <h1 style={{ fontSize: '24px' }}><strong>Events</strong></h1>\n          </Navbar.Item>\n          <Navbar.Item>\n            <Button color='black' onClick={() => setCart(true)}>\n              <Icon>\n                <FontAwesomeIcon icon={faUtensils} />\n              </Icon>\n            </Button>\n          </Navbar.Item>\n          <Navbar.Item>\n            <Button color='black' onClick={() => setMyEvents(true)}>\n              <Icon>\n                <FontAwesomeIcon icon={faCalendarPlus} />\n              </Icon>\n            </Button>\n          </Navbar.Item>\n        </Navbar.Brand>\n        <DayFilter />\n        <CostFilter />\n        <TimeFilter />\n        <Navbar.Item>\n        <SignInPrompt userName={userName} onButtonClick={setUserName} />\n        </Navbar.Item>\n        <Navbar.Item>\n        <Tag>{userName ? \"Logged in as user:\" + userName : \"Guest User\"}</Tag>\n        </Navbar.Item>\n      </Navbar>\n\n      <Modal active={cartActive}>\n        <Modal.Background />\n        <Modal.Content>\n          <Box>\n            <Cart cartInfoContent={cartInfo} removeFromCart={removeCartItem} />\n          </Box>\n        </Modal.Content>\n        <Modal.Close onClick={() => setCart(false)} />\n      </Modal>\n      <Modal active={eventsActive}>\n        <Modal.Background />\n        <Modal.Content>\n          <Box>\n            <MyEvents></MyEvents>\n          </Box>\n        </Modal.Content>\n        <Modal.Close onClick={() => setMyEvents(false)} />\n      </Modal>\n      <Column.Group multiline>\n        <Column size='full'>\n        </Column>\n        {filteredEvents.map(singleEvent =>\n          <Column size='one-third'>\n            <Product singleEvent={singleEvent} addToCart={addCartItem} />\n          </Column>\n        )}\n      </Column.Group>\n    </Container>\n  );\n};\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}